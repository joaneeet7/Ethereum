// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract father {
    // Factory information storage
    mapping (address => address) public personal_contract;

    // Inssuance of the new Smart Contracts 
    function Factory() public {
        address addr_personal_contract = address(new children(msg.sender));
        personal_contract[msg.sender] = addr_personal_contract;
    }

}

// Child contracts generated by this father
contract children {
    address public owner;
    address public smart_contract;

    // Owner's address associated with the contract
    constructor (address _account){
        owner = msg.sender;
        smart_contract = _account;
    }
}// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract father {
    // Factory information storage
    mapping (address => address) public personal_contract;

    // Inssuance of the new Smart Contracts 
    function Factory() public {
        address addr_personal_contract = address(new children(msg.sender));
        personal_contract[msg.sender] = addr_personal_contract;
    }

}

// Child contracts generated by this father
contract children {
    address public owner;
    address public smart_contract;

    // Owner's address associated with the contract
    constructor (address _account){
        owner = msg.sender;
        smart_contract = _account;
    }
}